root@ubuntu:~# nc 183.129.189.60 10024
all need gas is 2640204

 __    _    __  __        __   _                            _          ____      _ ____    _  _   _   _
| _|  | |  |_ | \ \      / /__| | ___ ___  _ __ ___   ___  | |_ ___   | __ )    | |  _ \  | || | | |_| |__
| |  / __)  | |  \ \ /\ / / _ \ |/ __/ _ \| '_ ` _ \ / _ \ | __/ _ \  |  _ \ _  | | | | | | || |_| __| '_ \
| |  \__ \  | |   \ V  V /  __/ | (_| (_) | | | | | |  __/ | || (_) | | |_) | |_| | |_| | |__   _| |_| | | |
| |  (   /  | |    \_/\_/ \___|_|\___\___/|_| |_| |_|\___|  \__\___/  |____/ \___/|____/     |_|  \__|_| |_|
|__|  |_|  |__|

[+] sha256(MB69YGDe+?).binary.endswith('00000')
[-] ?=epUg
[+] passed

We design a pretty easy contract game. Enjoy it!
1. Create a game account
2. Deploy a game contract (Will wait less than a minute)
3. Request for flag
4. Get source code
Game environment: Ropsten testnet
Option 1, get an account which will be used to deploy the contract;
Before option 2, please transfer some eth to this account (for gas);
Option 2, the robot will use the account to deploy the contract for the problem;
Option 3, use this option to obtain the flag after the event is triggered.
You can finish this challenge in a lot of connections.

Thanks for pikachu@hitcxy.com for sharing this template at https://github.com/hitcxy/blockchain_template.

[-]input your choice: 1
[+]Your game account:0xb4EA4424ee51D0a96B25bE01c729045b93CB6060
[+]token: fAYhTvojpfyXYaQOCLxEHUXL0UxLFEt/idMgEtqYxSgWLePU56ylzH4WgONa70tgOzAGwDh8VsbpsuT7FS1isshPwczUQhVAqep4zpQgmTPZKROM10X5GyNO2bhKuzLsDNPhncvBMnMDsVtlFxPxw6DtcbxAroej/QSVP+XYM0o=
[+]Deploy will cost 2640204 gas
[+]Make sure that you have enough ether to deploy!!!!!!


[-]input your choice: 2
[-]input your token: 123
Traceback (most recent call last):
  File "/root/ethbot/ethbot.py", line 200, in <module>
    data = validate_then_decrypt(token, AES_KEY, HMAC_KEY)
  File "/root/ethbot/util.py", line 24, in validate_then_decrypt
    s = b64decode(token)
  File "/usr/lib/python3.6/base64.py", line 87, in b64decode
    return binascii.a2b_base64(s)
binascii.Error: Incorrect padding


[-]input your choice: 3
[-]input your new token: 123
Traceback (most recent call last):
  File "/root/ethbot/ethbot.py", line 232, in <module>
    data = validate_then_decrypt(new_token, AES_KEY, HMAC_KEY)
  File "/root/ethbot/util.py", line 24, in validate_then_decrypt
    s = b64decode(token)
  File "/usr/lib/python3.6/base64.py", line 87, in b64decode
    return binascii.a2b_base64(s)
binascii.Error: Incorrect padding


[-]input your choice: 4
No source code for now, please wait for hints.